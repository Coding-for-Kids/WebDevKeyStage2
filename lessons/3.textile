h1. Making things prettier

This lesson we are going to start making our content a bit prettier.  We do that using a language called CSS - which stands for Cascading Style Sheet.

h4. Demonstration

* In jsfiddle @<h1>My heading</h1><p>Here is some body text blah blah.</p>@
* @h1 { color: red; background-color: yellow} p {color: green;}@

h4. Practical
* Do the demonstrations yourself
* Play with the colours a bit.  the 17 standard colours are aqua, black, blue, fuchsia, gray, grey, green, lime, maroon, navy, olive, purple, red, silver, teal, white, and yellow.  A complete list, with samples, can be found at "www.w3schools.com/cssref/css_colornames.asp":http://www.w3schools.com/cssref/css_colornames.asp.
* Play with the nomalize css checkbox.  Think about what is happening.

A CSS stylesheet is made up of one or more *rules*.
Each rule contains a *selector* (@p@ for example) which tells the browsers which bit of content to apply the style to, and a *declaration group* which specifies the style to be applied.
A declaration group sits in curly brackets or braces @{}@ and consists of one or more *declarations* such as @color:green;@.
A declaration is formed of a *property* (such as @color@), a colon @:@, a *value* (such as @green@) and a semi-colon @;@.

h2. Where can we put CSS?

h4. Demonstration

* In jsfiddle make sure Normalized CSS is enabled
* Using the browser _Inspect Element_ or equivalent, find the iframe where jsfiddle constructs the page.
* Point out external style sheet
* Point out internal style sheet

h4. Practical

* Repeat the demonstration and locate the two types of CSS in the iframe
* Uncheck the normalized css and refresh.  Where is the @<link rel="stylesheet" type="text/css" href="/css/normalize.css">@ gone?

h4. The three places we can put our CSS
# In an external style sheet, which we link to from the head section of our HTML.  For example @<link rel="stylesheet" type="text/css" href="/css/normalize.css">@  this is the preferred method.
# In an internal style sheet in the head of our HTML.  For example @<style type="text/css">h1 {color: red; background-color: yellow} p {color: green;}</style>@
# Inline styling, such as @<p style="color:green;">blah blah</p>@.  This mixes presentation with content, and should be avoided except while experimenting.

h4. Discussion

Why is an external stylesheet the best place to put your CSS?  
* Sharing between pages
* Separation of concerns no mixing presentation with content
* Another skill set - can be worked on by someone else

In fact there is a fourth place where CSS is specified - by the browser.  Each browser has default styles built in.  This is what we see if we clear the Normalized CSS checkbox in "jsfiddle":jsfiddle.net and clear out the CSS section.

h4. Practical

* Move your CSS into a .CSS file in your document folder
* Move your HTML to a .HTML file in the same folder
* Create a link to the CSS file in the HTML file (an external file sheet)
* Open the HTML file in the browser

h2. Choosing your font

There are several properties that affect the font.  We will look at a couple for now - *font-style* and *font-weight*.  The values for font-style are *normal* and *italic*.  The values for font-weight are *normal*, *bold*, *bolder*, *lighter*.  Find out more about fonts at "w3schools":http://www.w3schools.com/css/css_font.asp

h4. Practical

Apply font styling to your paragraph.

h2. Aligning your text

*text-align* is a very useful property that sets the alignment of text.  Values are *center* (note the american spelling), *left*, *right* and *justify*.

h4 Practical

Experiment with alignment - you will need quite a lot of text (three lines or more) to see what *justify* means, but it should come out looking like a newspaper or magazine column.

h2. Inheriting, Merging and Cascading

A browser builds up the property values for a selector as follows:

* Start with the browser built-in styling for the selector.  If it is not defined for the selector then start with the styling for the selector that this selector inherits from (body is the lowest level).
* Process the style sheets in the order in which they appear in the head.  If a new declaration matches your selector, merge it in.  If it clashes with an existing declaration, override the old one (cascading).
* Process the inline style in the same manner.

h4. Practical

* In your external stylesheet set the background-color to black for the p selector
* Create an internal stylesheet that sets color to white for the p selector.  Refresh the browser - you should see white text on a black background, as the properties have been merged.
* In your HTML file set up an inline style for a p element that sets the color to yellow.  Refresh the browser - you should see yellow text on a black background, as it has 'cascaded' on to of the white.
* In your HTML file modify your inline style so that is says <p style="color:yellow; color:aqua">.  Refresh the browser - you should see aqua text on a black background, as the aqua was the last value to be read, and it has 'cascaded' on top of the yellow.

h2. So how powerful is CSS?

There is a famous site on the internet called "www.csszengarden.com":http://www.csszengarden.com/ which contains an HTML file that is displayed with many different CSS files.  Have a look at them and see what properties you recognise.

You can learn more about CSS at "w3schools":http://www.w3schools.com/css